get:
  tags:
    - Professors
  summary: GET /professors/{id}/preferences
  description: Gets a history of a professor's preference entries ordered by time stamp with latest entry first
  operationId: getProfessorPreferences(id)
  parameters:
    - name: id
      in: path
      description: ID of professor
      required: true
      schema:
        type: string
        format: uuid
  responses:
    '200':
      description: successful operation
      content:
        application/json:
          schema:
            $ref: ../../components/schemas/ArrayProfessorPreference.yaml
    '400':
      description: Bad sql query or invalid input parameter
    '404':
      description: Professor has no preference entry
post:
  tags:
    - Professors
  summary: POST /professors/{id}/preferences
  description: Adds a professor's preference entry to the database
  operationId: postProfessorPreferences(id)
  requestBody:
    content:
      application/json:
        schema:
          $ref: ../../components/schemas/ProfessorPreferenceNoID.yaml
  parameters:
    - name: id
      in: path
      description: ID of professor
      required: true
      schema:
        type: string
        format: uuid
  responses:
    '200':
      description: successful operation
      content:
        application/json:
          schema:
            type: string
            description: UUID of professor's preferences
            example: 78c74a60-281c-45f4-9536-7d128701ddb5
    '400':
      description: error adding professor's preferences