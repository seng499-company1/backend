course_name	course_code	course_desc	prof_prereq	min_offering	spring_req	summer_req	fall_req	spring_peng_req	summer_peng_req	fall_peng_req	year_req	notes
Fundamentals of Programming with Engineering Applications	CSC111	"Fundamentals of computer programming with real-world engineering examples using an imperative programming language. Topics include variables, data types, statements, control structures, functions, parameter passing mechanisms, expressions, data structures, files, pointers, storage allocation, elementary searching and sorting, recursion, encapsulation, modularity, incremental development, testing and debugging."	NULL	2	1	0	1	0	0	0	1	2 sections in fall; PENG Preferred
Fundamentals of Programming II	CSC115	"Techniques, methods, and tools for systematic development and maintenance of software systems and documentation; basic algorithms and data structures; and fundamental concepts of object-oriented programming. Topics include control and data abstraction, modularization, abstract data types, layers of abstraction, information hiding, separation of concerns, type checking, program design, separate compilation, software libraries, techniques for the development of high-quality software components, program understanding."	NULL	3	1	1	1	0	0	0	1	3 sections in spring; PENG Preferred
Algorithms and Data Structures I	CSC225	"Basic techniques for design, analysis, implementation of algorithms and data structures. Foundations: Random access machine model, time and space complexity, worst-case analysis, upper and lower bounds. Proof techniques for algorithm correctness. Basic data structures: stacks, queues, linked lists. Sorting: elementary sorting algorithms, mergesort, quicksort, priority queues. Searching: Binary search trees, balanced search trees, hash tables. Graphs: undirected and directed graphs, graph traversals and applications, topological sort. Algorithm design techniques: greedy, backtracking, divide and conquer."	NULL	3	1	1	1	0	0	0	2	
Algorithms and Data Structures II	CSC226	"Advanced techniques for design, analysis, and implementation of algorithms and data structures with an introduction to algorithm engineering. Algorithmic design paradigms: greedy, divide-and-conquer, dynamic programming, backtracking, branch and bound. Advanced Analysis techniques, such as amortization. Advanced data structures: hashing, disjoint sets. Advanced graph algorithms: network flow, connectivity, minimum spanning trees, shortest paths. Mathematical tools: graphs and digraphs, graph properties, planar graphs, networks; discrete probability, counting techniques, recurrences."	NULL	3	1	1	1	0	0	0	3	
Introduction to Computer Architecture	CSC230	"The architecture of computer systems including concepts such as CPU, memory, buses, I/O, cache, instruction sets, interrupt processing, pipelining, performance. Families of processors, CISC, RISC. Memory organization and management (including virtual memory, protection, segmentation and paging). Computer arithmetic. The use of assemblers, linkers and loaders. Assembly language programming and its interface with a high-level language (C)."	NULL	3	1	1	1	0	0	1	2	
Software Development Methods	SENG265	"Fundamentals of computer programming with real-world engineering examples using an imperative programming language. Topics include variables, data types, statements, control structures, functions, parameter passing mechanisms, expressions, data structures"	NULL	3	1	1	1	0	0	1	2	
Software Testing	SENG275	"An introduction to the testing of large-scale systems. Software specification, unit testing, integration testing, test driven development, black box testing, code inspection, model-based testing, software defect tracking and tools for automated testing. A software project gives experience with larger scale testing, including basic database operations."	NULL	2	1	1	0	0	1	0	2	This course is popular with Comp sci students so an extra session is generally a good idea.
Foundations of Computer Science	CSC320	"A survey of formal models and results that form the theoretical foundations of computer science; typical topics include finite automata, Turing machines, undecidable problems, context free languages and computational complexity."	NULL	3	1	1	1	0	0	0	3	
Operating Systems	CSC360	"The major concepts of operating systems and study of the interrelationships between the operating system and the architecture of computer systems. Topics discussed include operating system structures, concurrent programming techniques, cpu scheduling, deadlocks, memory management, file systems and protection."	NULL	3	1	1	1	0	0	1	3	
Computer Communications and Networks	CSC361	"An introduction to concepts in computer communication and networks. Topics include layered network architectures, packet switching networks, local area networks, protocol design and network security."	NULL	2	1	0	1	1	0	0	3	
Database Systems	CSC370	"The use and operating principles of database management systems. Topics include: data entities and relationships; data modelling using Entity-Relation Diagrams: hierarchical, network and relational models of databases; query languages; physical representation of data in secondary storage; relational algebra and calculus as applied to the design of databases; security and integrity in the context of concurrent use; and basic ethical issues associated with database design and use."	NULL	3	1	1	1	0	0	0	3	
Human Computer Interaction	SENG310	"Understanding human behaviour as it applies to user interfaces: work activity analysis, observational techniques, questionnaire administration and unobtrusive measures. Operating parameters of the human cognitive system, task analysis and cognitive modelling techniques and their application to designing interfaces. Interaction design principles and prototyping techniques. Evaluation techniques including cognitive walkthroughs, usability studies and verbal protocol analysis are used to evaluate interface design. Case studies of specific user interfaces."	NULL	3	1	1	1	0	0	0	2	Summer section is for BSENG only; PENG preferred
Requirements Engineering	SENG321	"Combines a range of topics integral to the analysis of requirements, design, implementation, and testing of a medium-scale software system with the practical experience of implementing such a project as a member of a software engineering team. Introduces requirements engineering, specifications, software life cycle models and methods for requirements engineering."	NULL	2	1	0	1	1	1	1	3	BSENG only in Spring
Software Evolution	SENG371	"Introduces problems and solutions of long-term software maintenance/evolution and large-scale, long-lived software systems. Topics include software engineering techniques for programming-in-the-large, programming-in-the-many, legacy software systems, software architecture, software evolution, software maintenance, reverse engineering, program understanding, software visualization, advanced issues in object-oriented programming, design patterns, antipatterns, and client-server computing. Culminates in a team project."	NULL	1	1	0	0	1	1	1	3	
Software Architecture and Design	SENG350	"An introduction to analysis and design of software architectures with architecture description languages and their subsequent synthesis at the program level. Topics include requirements analysis, analysis and design of static and dynamic view points of architectures and model driven engineering. Architectural styles and tactics are introduced and applied as solutions to recurring design problems. Students are familiarized with component reuse, event-driven programming and computer-aided software engineering tools. The course includes a major design project."	NULL	1	0	0	1	0	0	0	3	Fall section for BSENG only
Security Engineering	SENG360	"Topics include basic cryptography, security protocols, access control, multilevel security, physical and environmental security, network security, application security, e-services security, human aspects and business continuity planning. Discusses applications which need various combinations of confidentiality, availability, integrity and covertness properties; mechanisms to incorporate and test these properties in systems. Policy and legal issues are also covered."	NULL	1	0	0	1	0	0	0	3	Fall section for BSENG only
Introduction to Computer Architecture	ECE255	"The architecture of computer systems including concepts such as processor, memory, buses, input/output, instruction sets, interrupt processing, pipelining, performance. Families of processors, CISC, RISC. Memory organization and management including cache, virtual memory, protection. Computer arithmetic. Assembly language programming, assemblers, linkers and loaders. Hardware/software interaction."	NULL	1	0	0	1	1	1	1	2	
Continuous-Time Signals and Systems	ECE260	Continuous-time signals and systems. Signal properties and basic signal transformations. Elementary functions including the Dirac delta function. System properties. Linear time-invariant systems and convolution. The Fourier series in the analysis of periodic signals. The Fourier transform and spectral analysis. The Laplace transform and its use in system analysis. The relationship between the Fourier and Laplace transforms. Solving differential equations with the Laplace transform. Partial fraction expansions. Using computer simulation of dynamic systems.	NULL	2	0	1	1	1	1	1	2	
Digital Signal Processing I	ECE310	Discrete-time signals and systems. Signal properties and basic signal transformations. System properties. Linear time-invariant systems and convolution. Discrete-time Fourier series. The Fourier transform and spectral analysis. The z transform and its use in system analysis. The relationship between the Fourier and z transforms. Sampling. Analysis and design of discrete-time systems. Solving difference equations with the z transform.	NULL	3	1	1	0	1	1	1	2	
Microprocessor-Based Systems	ECE355	"Processor organization: general-purpose and application-specific processors, datapath and control implementation, pipelining concepts. Memory organization: static and dynamic semiconductor memory, optical and magnetic memory, memory hierarchy and caches. I/O organization: physical and logic interfaces, interrupts and interrupt services routines, direct memory access (DMA), device drivers. Buses and protocols: bus signalling and arbitration, examples of modern buses, communications protocol concepts. Computer networking: network topologies, protocol stack, examples of modern networks."	NULL	1	0	0	1	1	1	1	3	
Control Theory and Systems I	ECE360	"Characterization of systems: linearity, time invariance and causality. General feedback theory; time and frequency domain analysis of feedback control systems; Routh-Hurwitz and Nyquist stability criteria; root locus methods; modelling of dc servos; design specifications and system performance; design of PID controllers; lead and lag compensators; introduction to state-space methods."	NULL	2	1	0	1	1	1	1	3	
Real Time Computer Systems Design Project	ECE455	"Techniques to guarantee the completion of computations by their deadline. Scheduling for periodic and non-periodic tasks. Organization and functionality of real time system software and hardware. Working in teams, students must complete a project involving substantial real time design and implementation, partly based on the knowledge and skills acquired in earlier coursework. Learning outcomes are based on a progress review, presentation, demonstration, and final report of the prototype design."	NULL	1	1	0	0	1	1	1	4	
Communication Networks	ECE458	"Introduction to communication networking principles and engineering including resource management, error control, flow control, congestion control, TCP/IP model, algorithm and protocol design for wireless and wired communication networks."	NULL	1	1	0	0	1	1	1	3	
Software Quality Engineering	SENG426	"An integral facet of software development, from requirements through delivery and maintenance. The principles of modern software engineering practices, such as DevOps and Site Reliability Engineering (SRE), with an emphasis on automation, continuous delivery and deployment. Topics include planning and achieving quality assurance goals such as reliability, security, performance and scalability for complex software systems."	NULL	1	0	1	0	1	1	1	4	
Embedded Systems	SENG440	"Characteristics and design of embedded systems. Formal models and specification languages for capturing system behaviour. Techniques for specification, exploration and refinement. System partitioning and hardware/software co-design. Tools for validation, verification and simulation. Quality and performance metrics."	NULL	1	0	1	0	1	1	1	4	
Design Project II	SENG499	"Students are required to pursue a team-based project under the supervision of a faculty member, to prepare a written report and present a seminar describing the work. Projects normally focus on large software systems, and collaboration with an industrial sponsor is encouraged."	NULL	1	0	1	0	1	1	1	4	
Social and Professional Issues	SENG401	"Introduces students to the larger societal context across Software Engineering and Computer Science. Topics include: the impact of software and hardware systems on privacy and handling of personal and proprietary information; the roles of encryption and interception of communication; trust in computers; democracy, free speech and civil discourse; intellectual property; computer crime; computers in the workplace; professional ethics and responsibilities; sustainable development and environmental stewardship; social ethics and relationships; economic exchange."	NULL	1	1	0	0	0	0	0	4	PENG preferred
Computer Architecture	CSC355	"Introduces the basic building blocks of a general purpose computer with emphasis on techniques for speed and performance enhancement. Topics include: central processor organization, arithmetic algorithms, lookahead and parallelism, memory hierarchy, control unit and microprogramming, input output devices, case studies of some recent micro, mini and mainframe computers."	NULL	1	0	0	1	0	0	0	3	
Design and Analysis of Real-time Systems	CSC460	"Fundamental issues in design of real-time operating systems and application software. Typical topics include: hard real-time scheduling, interrupt driven systems, process communication and synchronization, language requirements for real-time systems, decomposition of real-time requirements into process models and case studies. A project involving design, implementation and testing of a real-time executive and real-time application software is also included."	NULL	1	1	0	0	0	0	0	4	
